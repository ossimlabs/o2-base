buildscript {
  ext {
//    baseImage = "centos"
    baseImage = "rhel-minimal"
    grailsVersion = ""
    dockerFile=project.file("docker/Dockerfile")
    // must be a closure.  If set to =false then it thinks the proeprty does not exist
    hasJar={false}

    dockerStatementsOverride = {[
        "FROM ${project.dockerNamespaceUrl}${project.ext.baseImage}:${project.dockerAppTag}",
        "USER root",
        "ENV HOME /home/omar",
        "ADD ./yum.repos.d/* /etc/yum.repos.d/",
        "COPY goofys /usr/bin/goofys",
        """RUN yum -y install epel-release && \\
            yum -y install java-1.8.0-openjdk && \\
            yum -y install haveged && \\
            yum -y install wget && \\
            yum -y install unzip && \\
            yum -y install nss_wrapper gettext fuse fuse-libs libevent curl&& \\
            yum clean all && \\
            chkconfig haveged on && \\
            mkdir -p /s3 && chown -R 1001:0 /s3 && chmod 777 /s3 && chmod ugo+x /usr/bin/goofys && \\
            echo "user_allow_other" > /etc/fuse.conf && \\
            useradd -u 1001 -r -g 0 --create-home -d \$HOME -s /sbin/nologin -c 'Default Application User' omar 
            """,
        "COPY run.sh \$HOME",
        """RUN chown 1001:0 -R \$HOME && \\
            chmod 777 \$HOME && \\
            chmod 777 \$HOME/*.sh
            """,
        "USER 1001"
    ]}
    if(System.env.OMAR_COMMON_PROPERTIES)
    {
      apply from: System.env.OMAR_COMMON_PROPERTIES
    }
  }
  repositories {
    mavenLocal()
    maven { url "${ossimMavenProxy}" }
    if( !System.env.WWW_CONNECTED || Boolean.parseBoolean( System.env.WWW_CONNECTED ) ) {
      maven { url "https://plugins.gradle.org/m2/" }
      jcenter()
    }
	flatDir {
      dirs 'libs'
  }
  }

  dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.7'
        classpath 'com.github.skhatri:gradle-s3-plugin:1.0.4'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.7.4"
  }
}

plugins {
    id "com.github.ben-manes.versions" version "0.17.0"
    id "org.sonarqube" version "2.6.2"
}

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "maven-publish"
apply plugin: "maven"
